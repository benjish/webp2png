const Webp2PngSW=(()=>{const e=e=>"image/webp"===e.headers.get("content-type");if("true"!==new URL(location.href).searchParams.get("webp2png"))return{fetchHandler:e=>Promise.resolve(e),messageHandler:()=>!1,isWebpResponse:e};let t=null,r=[];const n={},s=(()=>{const e=function*(){let e=1;for(;;)yield e++}();return()=>"ID"+e.next().value})(),a=e=>new Promise(async(a,o)=>{const c=s();try{const s=await e.arrayBuffer();n[c]={res:a,rej:o};const i=await(()=>t?Promise.resolve(t):new Promise((e,t)=>{let n,s=!1;const a=()=>!s&&(s=!0,clearTimeout(n),!0),o=()=>a()&&t();n=setTimeout(o,15e3),r.push({res:t=>a()&&e(t),rej:o})}))();if(!i)throw new Error("NO CLIENT");i.postMessage({cmd:"webp2png-convert",id:c,data:s})}catch(e){delete n[c],o(e)}});return{fetchHandler:async t=>t.ok&&e(t)?await a(t):t,messageHandler:e=>{if("object"!=typeof e.data||!e.data.cmd)return!1;const s=e.data;switch(e.data.cmd){case"webp2png-response":if(s.id in n){const e=n[s.id];e?s.error?e.rej(s.error):e.res(new Response(s.data.buffer,{headers:{"Content-Type":s.data.type}})):console.warn("WEBP CALLBACK RESPONSE LOST"),delete n[s.id]}return!0;case"webp2png-clientConnect":{let n;for(t=e.ports[0];n=r.shift();)n.res(t);return!0}case"webp2png-clientDisconnect":{let e;for(t=null;e=r.shift();)e.rej();return!0}}return!1},isWebpResponse:e}})();
